%section{:style=>"background-color:white;"}
	.container	
		.row
			.col-md-1.col-lg-2
			.col-md-10.col-lg-8
				%h2.text-center
					Design
				%p
					After exploring a number of design treatments, we landed on a minimal approach so the content could shine. We kept the UI fairly “system” so as to maintain familiarity to native users. 
			.col-md-1.col-lg-2
%section.ideas
	.container
		.col-md-1.col-lg-2
		.col-md-10.col-lg-8
			%img.img-responsive.margin-auto.margin-bottom.margin-top{:src=>"images/ideas_1.png"}
		.col-md-1.col-lg-2

%section{:style=>"background-color:white;"}
	.container
		.row
			.col-md-3
			.col-md-6
				%h4
					Many of the apps we looked at during our research phase looked beautiful, but did not feel all that usable. We choose to place native functionality high on the priority list. 
				.app-bg
					#carousel-app.carousel.slide
						.carousel-inner
							.item.active
								%img.full-width{:alt => "...", :src => "images/app_1.png"}
							.item
								%img.full-width{:alt => "...", :src => "images/app_2.png"}
							.item
								%img.full-width{:alt => "...", :src => "images/app_3.png"}
							.item
								%img.full-width{:alt => "...", :src => "images/app_4.png"}
							.item
								%img.full-width{:alt => "...", :src => "images/app_5.png"}
							.item
								%img.full-width{:alt => "...", :src => "images/app_6.png"}
							.item
								%img.full-width{:alt => "...", :src => "images/app_7.png"}
							.item
								%img.full-width{:alt => "...", :src => "images/app_8.png"}


						%a.left.carousel-control{"data-slide" => "prev", :href => "#carousel-app"}
						%a.right.carousel-control{"data-slide" => "next", :href => "#carousel-app"}
			.col-md-3
		.row
			.col-md-12
				%h4.text-center
					Click the screen to advance images.
%section{:style=>"background-color:white;"}
	.container	
		.row
			.col-md-1.col-lg-2
			.col-md-10.col-lg-8
				%h2.text-center
					Heating up and cooling down
				%p
					We worked to create a design system where the current mode (hot/cold) could radiate through without being overwhelming. The idea here is that the “Feel” of the app can change while the UI elements do not feel unfamiliar as a result of the shift. 
			.col-md-1.col-lg-2
		.row
			.col-md-1.col-lg-2
			.col-md-10.col-lg-8
				%img.img-responsive.margin-auto.margin-bottom.margin-top.shadowed{:src=>"images/hot-cold.gif"}
			.col-md-1.col-lg-2
%section
	.container	
		.row
			.col-md-1.col-lg-2
			.col-md-10.col-lg-8
				%h2.text-center
					Type
				%p
					Continuing with the “System” approach, we choose Apple’s default SF font family for all UI fonts. To keep the app from feeling too “sterile” however, we used added “Museo Sans” for displaying numbers. The Museo font family is modern and clean yet friendly and approachable. These attributes compliment the personality of the app well. 
			.col-md-1.col-lg-2
		.row
			.col-md-1.col-lg-2
			.col-md-10.col-lg-8
				%img.img-responsive.margin-auto.margin-bottom.margin-top{:src=>"images/type.png"}
			.col-md-1.col-lg-2
			.col-md-1.col-lg-2
		.row
			.col-md-1.col-lg-2
			.col-md-10.col-lg-8
				%p
					When porting the design of the app to Android OS, Roboto may be used in place of SF so as to remain familiar to the Android user base.  
			.col-md-1.col-lg-2